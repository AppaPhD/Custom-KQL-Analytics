{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/a15f43c4-32e5-4697-b5e7-b9b5418ce315')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/a15f43c4-32e5-4697-b5e7-b9b5418ce315')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "_CSGP: AWS CloudTrail - Prd Secret Access-Medium",
                "description": "Detects when an ssorole manually accesses a secret in prd. This is highly discouraged and against best practices, as no human should be accessing prd secrets.\n\nHandling guidance: Reach out to user and manager to confirm manual secret access was needed. Confirm with secops that the user should have access to prd secrets.",
                "severity": "Medium",
                "enabled": true,
                "query": "//Author: Jeremy Kesterson\r\n//Source:  \r\n//Reviewers: James Kim, Vivian tran, Nixy Camacho (reworked/optimized 6/28/24) \r\n//Description: Detects when an sso role manually accesses a secret in prd. This is highly discouraged and against best practices, as no human should be accessing prd secrets.\r\n//Handling guidance: Reach out to user and manager to confirm manual secret access was needed. Confirm with secops that the user should have access to prd secrets.\r\n//aws_homesnet_prd_dba is permitted to access secrets:https://tfs.prd.costargroup.com/CoStarCollection/CSGP%20SecOps/_git/CSGP.SecOps.Core-cf?path=/accounts/secops-aws_homesnet_prd.yaml\r\n//03/03/2025 - Wajahat Malik - Added the accounts \"aws_vlsharedsvc_prd_admins\" and \"aws_vl_prd_admins\" as exclusions. https://costar-group-prod-dev.atlassian.net/browse/SEC-13512?atlOrigin=eyJpIjoiYTA5M2RkYTliM2M4NGRiNWEzYjIwZmRiMjI4OTMyYzYiLCJwIjoiaiJ9\r\nlet excluded_session_username = dynamic([\"aws_vlsharedsvc_prd_admins\", \"aws_vl_prd_admins\", \"aws_homesnet_prd_dba\"]);\r\nAWSCloudTrail\r\n| where EventSource == 'secretsmanager.amazonaws.com'\r\n    and EventName == 'GetSecretValue'\r\n    and UserIdentityArn has_all ('assumed-role', 'aws_', '_prd')\r\n// | where name contains 'prd' and name !contains 'aws_hs' and name !contains 'realla' // **Initially needed during onboarding to suppress BPs, not needed anymore\r\n| extend UserIdentity = split(UserIdentityArn, '/')[2]\r\n//| where SessionIssuerUserName != \"aws_homesnet_prd_dba\"  // **Need to keep this in as this source generates too many frequent benign alerts\r\n| where not(SessionIssuerUserName in (excluded_session_username))\r\n| extend BrowserUserAgent = extract(\"(Mozilla/5\\\\.0.*|Chrome/.*|Safari/.*|Firefox/.*)\", 1, UserAgent) //Type of browser\r\n| extend FromBrowser = iff(isempty(BrowserUserAgent), false, true)\r\n| extend OSUserAgent = extract(\"(Windows NT .*|Macintosh.*|Linux.*)\", 1, UserAgent) //Operating system\r\n| extend OSUsed = iff(isempty(OSUserAgent), false, true)\r\n| extend AWSSDKUserAgent = extract(\"(aws-sdk-[a-zA-Z0-9]+/.*|Boto3.*)\", 1, UserAgent) //AWS Software Development Kit\r\n| extend From_SDK_Kit = iff(isempty(AWSSDKUserAgent), false, true)\r\n| extend AWSCLIUserAgent = extract(\"(aws-cli/.*)\", 1, UserAgent) //AWS CLI\r\n| extend FromCLI = iff(isempty(AWSCLIUserAgent), false, true)\r\n| project \r\n    TimeGenerated,\r\n    UserIdentityArn,\r\n    UserIdentity,\r\n    SessionIssuerUserName,\r\n    EventName,\r\n    SourceIpAddress,\r\n    ErrorCode,\r\n    ErrorMessage,\r\n    UserAgent, FromBrowser, OSUsed, From_SDK_Kit, FromCLI",
                "queryFrequency": "PT15M",
                "queryPeriod": "PT15M",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "Exfiltration",
                    "CredentialAccess",
                    "Reconnaissance"
                ],
                "techniques": [],
                "subTechniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT1H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                    "alertDynamicProperties": []
                },
                "customDetails": {
                    "UserIdentityArn": "UserIdentityArn"
                },
                "entityMappings": [
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "CommandLine",
                                "columnName": "EventName"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "SourceIpAddress"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "SessionIssuerUserName"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "UserIdentity"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "ProcessId",
                                "columnName": "ErrorCode"
                            },
                            {
                                "identifier": "CommandLine",
                                "columnName": "ErrorMessage"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}