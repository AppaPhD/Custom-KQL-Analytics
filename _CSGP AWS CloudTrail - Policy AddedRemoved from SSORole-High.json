{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/696537e1-d0a7-4673-af45-072ab30fd2fb')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/696537e1-d0a7-4673-af45-072ab30fd2fb')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "_CSGP: AWS CloudTrail - Policy Added/Removed from SSORole-High",
                "description": "This query identifies any 'SSORoles' (employee assumed roles for AWS access, ex. aws_security_sbx_secops), that have had a policy added/removed. This should ONLY be done by the BuildAgentRole and never by any other identity.\n\nHandling guidance: Identify the modified role and what was done to the policy. If a policy was removed, reach out to secops to reattach this policy. If a policy was added, review what access was granted by this policy in wiz, and reach out to secops team to remediate.",
                "severity": "High",
                "enabled": true,
                "query": "//Author: Jeremy Kesterson, Kamran Ahmadjan\r\n//Source:  NA\r\n//Reviewer: James Kim \r\n//Description: This query identifies any 'SSORoles' (employee assumed roles for AWS access, ex. aws_security_sbx_secops), that have had a policy added/removed. This should ONLY be done by the BuildAgentRole and never by any other identity.\r\n//Handling guidance: Identify the modified role and what was done to the policy. If a policy was removed, reach out to secops to reattach this policy. If a policy was added, review what access was granted by this policy in wiz, and reach out to secops team to remediate.\r\n//\r\n// Notes\r\n//............\r\n//Exclude build role, as it deploys cloudformation stack for SSO \r\n//Exclude org role, as it is part of offboarding/onboarding\r\nlet useridentity = dynamic(['CSGPBuildAgentRole' , 'OrganizationAccountAccessRole']); \r\nAWSCloudTrail\r\n| where dynamic(['AttachRolePolicy', 'DeleteRolePolicy', 'DetachRolePolicy', 'PutRolePolicy']) has EventName\r\n| extend UserIdentity = split(UserIdentityArn, '/')[1]\r\n| where not(UserIdentityArn has_any (useridentity)) \r\n| extend RequestParamsJson = parse_json(RequestParameters)\r\n| extend ModifiedRole = RequestParamsJson.roleName\r\n| where ModifiedRole matches regex '(^.*(_sbx|_dev|_tst|_prd)(_developers|_devops|_secops|_security|_network|_systems|_qa|(_dba|_dbapriv)|_.developers.)$)|(.*(CSGPDivvyCloudRole|CSGPBuildAgentRole).*)'\r\n| join kind=inner _GetWatchlist('aws-accounts') on $left.UserIdentityAccountId == $right.accountid\r\n| extend AccountName = name\r\n| extend UserIdentity = split(UserIdentityArn, '/')[2]\r\n| project TimeGenerated, EventName, SessionIssuerArn, RequestParameters, UserIdentity, ModifiedRole, name, accountid",
                "queryFrequency": "PT15M",
                "queryPeriod": "PT15M",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "LateralMovement",
                    "PrivilegeEscalation"
                ],
                "techniques": [],
                "subTechniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "AccountName": "name",
                    "EventName": "EventName",
                    "ModifiedRole": "ModifiedRole"
                },
                "entityMappings": [
                    {
                        "entityType": "CloudApplication",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "name"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}