{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/08d05cdd-fdb4-4338-949a-a4c4fe56b9f8')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/08d05cdd-fdb4-4338-949a-a4c4fe56b9f8')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "_CSGP: Suspicious service account membership change",
                "description": "This detection looks for changing AD membership of accounts that seems suspicious or unwarranted. Could be an indicator of post exploitation\n\nHandling Guidance:\n1. Check for the login history of the Actor account and the target account, verify that there is no suspicious activity\n2. If the account seems to be acting anomalously, reach out to the person that is the most logged onto the device and confirm activity\n3. at the same time, notify you team and look to isolate the account/device if true positive is confirmed",
                "severity": "Medium",
                "enabled": true,
                "query": "// Contributors: Samuel Liu\r\n// Reviewers: \r\n//\r\n// Description: This detection looks for changing AD membership of accounts that seems suspicious or unwarranted. Could be an indicator of post exploitation\r\n// Handling Guidance:\r\n//      1. Check for the login history of the Actor account and the target account, verify that there is no suspicious activity\r\n//      2. If the account seems to be acting anomalously, reach out to the person that is the most logged onto the device and confirm activity\r\n//      3. at the same time, notify you team and look to isolate the account/device if true positive is confirmed\r\n//\r\nlet security_data = (SecurityEvent\r\n//| where Account contains \"svcAD_ManageGroup\"\r\n| where EventID != 4624 and EventID != 4634 and EventID != 4662 and EventID != 5136 //non-focused event IDs\r\n//| where EventData contains \"svcVRealizeAuto\"\r\n| extend EventData_json = parse_xml(EventData)\r\n| extend _text_ = tostring(parse_json(tostring(parse_json(tostring(EventData_json.EventData)).Data))[0].[\"#text\"])\r\n| parse _text_ with * \"CN=\" subject_Account \",OU=\" *\r\n| extend security_data = 1\r\n| summarize by Account, Activity, subject_Account, security_data);\r\nlet auditlogs_data = (AuditLogs\r\n| where TargetResources contains \"svc\"\r\n| where OperationName contains \"member\" and OperationName contains \"group\"\r\n| extend TargetAccount = tostring(TargetResources[0].userPrincipalName)\r\n| extend GroupName = coalesce(\r\n    tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue))),\r\n    tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].oldValue))))\r\n| project-reorder TimeGenerated, Identity,OperationName, GroupName, TargetAccount,TargetResources, AdditionalDetails\r\n| extend AccountName = tostring(split(TargetAccount, \"@\")[0])\r\n| extend auditlogs_data = 1\r\n| summarize GroupName = make_set(GroupName), count() by OperationName, AccountName, auditlogs_data);\r\nIdentityDirectoryEvents\r\n| where AccountName contains \"svc\"\r\n| where ActionType has \"Group Membership changed\"\r\n| extend FROM_GROUP_ = tostring(AdditionalFields.[\"FROM.GROUP\"])\r\n| extend TARGET_OBJECT_ENTITY_USER_ = tostring(AdditionalFields.[\"TARGET_OBJECT.ENTITY_USER\"])\r\n| extend ACTOR_ACCOUNT_ = tostring(AdditionalFields.[\"ACTOR.ACCOUNT\"])\r\n| extend TO_GROUP_ = tostring(AdditionalFields.[\"TO.GROUP\"])\r\n| where TO_GROUP_ contains \"admin\"\r\n| project-reorder TimeGenerated, ActionType,AccountName,ACTOR_ACCOUNT_, TARGET_OBJECT_ENTITY_USER_, TO_GROUP_\r\n| join kind=innerunique auditlogs_data on $left.TARGET_OBJECT_ENTITY_USER_ == $right.AccountName\r\n| join kind=innerunique security_data on $left.TARGET_OBJECT_ENTITY_USER_ == $right.subject_Account\r\n| extend tracking_integrity = security_data + auditlogs_data + 1\r\n| project-reorder TimeGenerated, tracking_integrity, ACTOR_ACCOUNT_, TARGET_OBJECT_ENTITY_USER_, ActionType, OperationName, Activity, GroupName",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "PrivilegeEscalation",
                    "LateralMovement"
                ],
                "techniques": [],
                "subTechniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "Selected",
                        "groupByEntities": [
                            "Account"
                        ],
                        "groupByAlertDetails": [
                            "DisplayName"
                        ],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "ACTOR_ACCOUNT_"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "TARGET_OBJECT_ENTITY_USER_"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "CommandLine",
                                "columnName": "Activity"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "CommandLine",
                                "columnName": "GroupName"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}