{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/f525cb5a-f6bb-4114-9033-7dc7ace0267f')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/f525cb5a-f6bb-4114-9033-7dc7ace0267f')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "_CSGP: Azure DevOps Variable Secret Not Secured",
                "description": "",
                "severity": "Medium",
                "enabled": true,
                "query": "// The query_now parameter represents the time (in UTC) at which the scheduled analytics rule ran to produce this alert.\n// Contributor: \n// Reviewer: jkim2\n// Reference:\n//\n// Description: \n// Handling Guidance: Reach out to the Actor and confirm their action of modifying the variable group in the identified project.\n//\n// Date     | Author             | Change notes\n// ---------------------------------------------------\n// 4/17/23 | Obadiah             | Added boilerplate\n// 1/3/24 | James               | Fixing formatting and adding handling guidance\n//Built-in\nlet keywords = dynamic([\"secret\", \"secrets\", \"password\", \"PAT\", \"passwd\", \"pswd\", \"pwd\", \"cred\", \"creds\", \"credentials\", \"credential\", \"key\"]);\nAzureDevOpsAuditing\n| where OperationName =~ \"Library.VariableGroupModified\"\n| extend Type = tostring(Data.Type)\n| extend VariableGroupId = tostring(Data.VariableGroupId)\n| extend VariableGroupName = tostring(Data.VariableGroupName)\n| mv-expand Data.Variables\n| where VariableGroupName has_any (keywords) or Data_Variables has_any (keywords)\n| where Type != \"AzureKeyVault\"\n| where Data_Variables !has \"IsSecret\"\n| project\n    TimeGenerated,\n    ActorUPN,\n    IpAddress,\n    VariableGroupName,\n    Details,\n    ScopeDisplayName,\n    Data,\n    Area,\n    Category,\n    ActorDisplayName,\n    SourceSystem,\n    Type,\n    Data_Variables",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "CredentialAccess"
                ],
                "techniques": [
                    "T1555"
                ],
                "subTechniques": [],
                "alertRuleTemplateName": "4ca74dc0-8352-4ac5-893c-73571cc78331",
                "incidentConfiguration": {
                    "createIncident": false,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": {
                    "alertDescriptionFormat": "{{ActorDisplayName}} {{Details}} \nCredentials used in the build process may be stored as Azure DevOps variables. To secure these variables they should be stored in KeyVault or marked as Secrets. \nThis detection looks for new variables added with names that suggest they are credentials but where they are not set as Secrets or stored in KeyVault.\nHandling Guidance: Confirm with the user whether the variable contains secrets and if so, should be added to the vault and not stored within TFS\n\n",
                    "alertDynamicProperties": []
                },
                "customDetails": {},
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "ActorUPN"
                            },
                            {
                                "identifier": "FullName",
                                "columnName": "ActorDisplayName"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IpAddress"
                            }
                        ]
                    },
                    {
                        "entityType": "CloudApplication",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "VariableGroupName"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": "1.0.1"
            }
        }
    ]
}