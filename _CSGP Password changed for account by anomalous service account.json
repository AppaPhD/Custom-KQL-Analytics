{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/97c4c6c5-636b-4a07-ae6c-432f20fc8081')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/97c4c6c5-636b-4a07-ae6c-432f20fc8081')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "_CSGP: Password changed for account by anomalous service account",
                "description": "Detects when a service account makes a password change on another account when the service account normally doesn't change account passwords. Uses behavioral timeseries analysis to determine irregularities.\n\nTTPs: ['T1078', 'T1098']\n\nHandling Guidance:\n1. See what the svc account is usually used for, what the common actions of this account? Does the name of the account imply that this could be used for password changing? If not, then get a second set of eyes\n2. Check if there was a ticket in JIRA made for a password reset, often svc workloads will be tracked with JIRA tickets. \n3. Reach out to Point of contact for this svc account",
                "severity": "Medium",
                "enabled": true,
                "query": "// Contributors: Kevin Cleavinger, Samuel Liu\r\n//\r\n// Description: Detects when a service account makes a password change on another account when the service account normally doesn't change account passwords.\r\n//              Uses behavioral timeseries analysis to determine irregularities\r\n//\r\n// Reviewer:\r\nlet enrich = (\r\nSecurityEvent\r\n| where Account contains \"svc\" and EventID == \"4724\"\r\n| extend Account = tostring(split(Account, \"\\\\\")[1])\r\n| summarize TargetAccounts = make_set(TargetAccount) by Account, bin(TimeGenerated, 12h)\r\n| extend TimeGenerated = format_datetime(todatetime(TimeGenerated),\"M/d/yyyy, h:mm:ss:fff tt\")\r\n| extend TimeGenerated = tostring(TimeGenerated));\r\nSecurityEvent\r\n| where Account contains \"svc\" and EventID == \"4724\"\r\n| where TargetAccount != Account\r\n| make-series Events=count(), default=0 on TimeGenerated in range(ago(14d), now(), 12h) by Account\r\n| summarize EventCount=make_list(Events, 1000), TimeGenerated=make_list(TimeGenerated, 1000) by Account\r\n| extend (outliers, score, baseline) = series_decompose_anomalies(EventCount, 5.5, -1, \"linefit\") //anomaly detection with statistics\r\n| mv-expand TimeGenerated, EventCount to typeof(long), outliers, baseline to typeof(long), score to typeof(double)\r\n| where outliers > 0 //filter for behavioral anomalies\r\n| extend Account = tostring(split(Account, \"\\\\\")[1])\r\n| extend TimeGenerated = format_datetime(todatetime(TimeGenerated),\"M/d/yyyy, h:mm:ss:fff tt\")\r\n| extend TimeGenerated = tostring(TimeGenerated)\r\n| join kind=leftanti (\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(30d)\r\n    | where AccountName startswith \"svc\"\r\n    | where tostring(GroupMembership) contains \"Active Directory Add Computers Automated\"\r\n    | distinct AccountName, tostring(GroupMembership)) on $left.Account == $right.AccountName\r\n| join kind=inner enrich on Account, TimeGenerated\r\n| where todatetime(TimeGenerated) > ago(1d)\r\n| project TimeGenerated, Account, TargetAccounts, EventCount, outliers, score, baseline",
                "queryFrequency": "PT12H",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "LateralMovement",
                    "Persistence",
                    "InitialAccess"
                ],
                "techniques": [],
                "subTechniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "Account"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "TargetAccounts"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "CommandLine",
                                "columnName": "EventCount"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "CommandLine",
                                "columnName": "baseline"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}